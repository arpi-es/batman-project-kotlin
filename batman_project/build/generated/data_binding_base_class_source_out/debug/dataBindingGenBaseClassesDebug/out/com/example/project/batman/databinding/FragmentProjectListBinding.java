// Generated by data binding compiler. Do not edit!
package com.example.project.batman.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.example.project.batman.R;
import com.example.project.batman.viewmodel.ProjectViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentProjectListBinding extends ViewDataBinding {
  @NonNull
  public final TextView loadingProjects;

  @NonNull
  public final RecyclerView projectList;

  @Bindable
  protected boolean mIsLoading;

  @Bindable
  protected ProjectViewModel mProjectViewModel;

  protected FragmentProjectListBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView loadingProjects, RecyclerView projectList) {
    super(_bindingComponent, _root, _localFieldCount);
    this.loadingProjects = loadingProjects;
    this.projectList = projectList;
  }

  public abstract void setIsLoading(boolean isLoading);

  public boolean getIsLoading() {
    return mIsLoading;
  }

  public abstract void setProjectViewModel(@Nullable ProjectViewModel projectViewModel);

  @Nullable
  public ProjectViewModel getProjectViewModel() {
    return mProjectViewModel;
  }

  @NonNull
  public static FragmentProjectListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_movie_list, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentProjectListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentProjectListBinding>inflateInternal(inflater, R.layout.fragment_project_list, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentProjectListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_movie_list, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentProjectListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentProjectListBinding>inflateInternal(inflater, R.layout.fragment_project_list, null, false, component);
  }

  public static FragmentProjectListBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentProjectListBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentProjectListBinding)bind(component, view, R.layout.fragment_project_list);
  }
}
